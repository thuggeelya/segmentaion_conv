# -*- coding: utf-8 -*-
"""LB3_mmro.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CIQ2m1HySyQYESJMJKnM5nTn4QoNvefg
"""

from PIL import Image, ImageDraw
import numpy as np
import matplotlib.pyplot as plt
import os
import numpy as np
from keras.models import Sequential 
from keras.layers import Conv2D
from keras.optimizers import Adam

from google.colab import drive
drive.mount('/content/drive', force_remount = True)

def download_data(path): 
  data = []
  for path_image in sorted(os.listdir(path=path)): 
    image = Image.open(path + path_image)
    data.append(np.array(image))
  return data

X_train = download_data(r"./drive/MyDrive/data/train/image/")
Y_train = download_data(r"./drive/MyDrive/data/train/label/")
X_test = download_data(r"./drive/MyDrive/data/test/image/")
Y_test = download_data(r"./drive/MyDrive/data/test/label/")

plt.imshow(X_test[0], cmap='gray')

X_train_pred = np.array(X_train).reshape([30, 512, 512, 1])/255
Y_train_pred = np.array(Y_train).reshape([30, 512, 512, 1])/255
X_test_pred = np.array(X_test).reshape([30, 512, 512, 1])/255 
Y_test_pred = np.array(Y_test).reshape([30, 512, 512, 1])/255

model = Sequential()
model.add(Conv2D(64, 5, input_shape=[512, 512, 1], activation = 'relu', padding ='same'))
model.add(Conv2D(64, 5, activation = 'relu', padding ='same'))
model.add(Conv2D(64, 5, activation = 'relu', padding ='same'))
model.add(Conv2D(64, 5, activation = 'relu', padding ='same'))
model.add(Conv2D(64, 5, activation = 'relu', padding ='same'))
model.add(Conv2D(64, 5, activation = 'relu', padding ='same'))
model.add(Conv2D(1, 1, activation = 'sigmoid'))
model.compile(optimizer = Adam(), loss = 'mse')

model.fit(X_train_pred , Y_train_pred , epochs=30, batch_size=1)

print("MSE: ", model.evaluate(X_test_pred , Y_test_pred , batch_size=1))

out = model.predict(X_test_pred , batch_size=1)

I=0
plt.imshow(out[I].reshape([512, 512]), cmap='gray')